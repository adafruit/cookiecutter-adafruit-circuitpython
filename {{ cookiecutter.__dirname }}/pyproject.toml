# SPDX-FileCopyrightText: 2022 Alec Delaney, written for Adafruit Industries
# SPDX-FileCopyrightText: Copyright (c) {% now 'utc', '%Y' %} {{ cookiecutter.author_name }}{% if cookiecutter.company %} for {{ cookiecutter.company }}{% endif %}
#
# SPDX-License-Identifier: MIT

{# put keywords into an iterable list, based on word wrapping #}
{%- set kw_list = namespace(kw_list=[], default=["adafruit", "blinka", "circuitpython", "micropython"]) -%}
{%- do kw_list.default.append(cookiecutter.library_name|lower|replace(" ", "-")) -%}
{%- set user_kws = cookiecutter.library_keywords.split(" ") -%}
{%- do kw_list.default.extend(user_kws|reject("==", "")) -%}
{%- set wrapped = kw_list.default|unique|join(" ")|wordwrap(break_long_words=False) -%}
{%- do kw_list.kw_list.extend(wrapped.split("\n")) -%}
{# create repo and pypi names #}
{%- if cookiecutter.target_bundle != 'CircuitPython Org' -%}
    {%- if cookiecutter.library_prefix -%}
        {%- set repo_name = (cookiecutter.library_prefix | capitalize) -%}
        {%- set repo_name = repo_name + '_CircuitPython_' -%}
        {%- set repo_name = repo_name + cookiecutter.library_name | replace(" ", "_") -%}
    {%- else -%}
        {%- set repo_name = 'CircuitPython_' -%}
        {%- set repo_name = repo_name + cookiecutter.library_name | replace(" ", "_") -%}
    {%- endif -%}
{%- else -%}
    {%- set repo_name = 'CircuitPython_Org_' + cookiecutter.library_name | replace(" ", "_") -%}
{%- endif -%}
{%- set pypi_name = repo_name|lower|replace("_", "-")|replace(" ", "-")|replace("circuitpython-org-", "circuitpython-") -%}
{%- set lib_author_name = "" -%}
{%- if cookiecutter.company -%}
    {%- set lib_author_name = cookiecutter.company -%}
{%- elif cookiecutter.author_name -%}
    {%- set lib_author_name = cookiecutter.author_name -%}
{%- endif -%}
{%- set lib_author_email = "" -%}
{%- if cookiecutter.target_bundle == "Adafruit" -%}
    {%- set lib_author_email = "circuitpython@adafruit.com" -%}
{%- elif cookiecutter.author_email -%}
    {%- set lib_author_email = cookiecutter.author_email -%}
{%- endif -%}
[build-system]
requires = [
    "setuptools",
    "wheel",
    "setuptools-scm",
]

[project]
name = "{{ pypi_name }}"
description = "{{ cookiecutter.library_description }}"
version = "0.0.0+auto.0"
readme = "README.rst"
authors = [
    {name = "{{ lib_author_name }}"{% if  lib_author_email != "" %}, email = "{{ lib_author_email }}"{% endif -%} }
]
urls = {Homepage = "https://github.com/{{ cookiecutter.github_user }}/{{ repo_name }}"}
keywords = [
{% for kw_list_keyword in kw_list.default %}    "{{ kw_list_keyword }}",
{% endfor -%}
]
license = {text = "MIT"}
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: System :: Hardware",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
dynamic = ["dependencies", "optional-dependencies"]

[tool.setuptools]
# TODO: IF LIBRARY FILES ARE A PACKAGE FOLDER,
#       CHANGE `py_modules = ['...']` TO `packages = ['...']`
py-modules = ["{% if cookiecutter.library_prefix %}{{ cookiecutter.library_prefix | lower | replace(" ", "_") }}_{% endif %}{{ cookiecutter.library_name | lower | replace(" ", "_") }}"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies = {optional = {file = ["optional_requirements.txt"]}}

[tool.isort]
profile = "black"
skip_gitignore = true
